summarise(mean_gdp=mean(gdpPercap), mean_lifeExp  = mean(lifeExp)) %>%
ggplot(aes(x=mean_gdp, y=mean_lifeExp)) +
geom_point(aes(color=continent))
# 6. gapminder::gapminder 데이터 셋을 이용하여 년도별로 gdp와 기대수명과의 관계를
#산점도를 그리고 대륙별 점의 색상을 달리 시각화
gapminder %>%
group_by(year, continent) %>%
summarise(mean_gdp=mean(gdpPercap), mean_lifeExp  = mean(lifeExp)) %>%
ggplot(aes(x=mean_gdp, y=mean_lifeExp)) +
geom_point(aes(color=continent))
diamonds %>%
group_by (cut, table) %>%
summarise(n=n() ) %>%
ggplot(aes(x=table, y=n )) +
geom_bar(stat='identity') +
facet_wrap(~cut) +
coord_cartesian(ylim=c(0,3000), xlim=c(50,80))
# 6. gapminder::gapminder 데이터 셋을 이용하여 년도별로 gdp와 기대수명과의 관계를
#산점도를 그리고 대륙별 점의 색상을 달리 시각화
gapminder %>%
group_by(year, continent) %>%
summarise(mean_gdp=mean(gdpPercap), mean_lifeExp  = mean(lifeExp)) %>%
ggplot(aes(x=mean_gdp, y=mean_lifeExp)) +
facet_wrap(~year)
# 6. gapminder::gapminder 데이터 셋을 이용하여 년도별로 gdp와 기대수명과의 관계를
#산점도를 그리고 대륙별 점의 색상을 달리 시각화
gapminder %>%
group_by(year, continent) %>%
summarise(mean_gdp=mean(gdpPercap), mean_lifeExp  = mean(lifeExp)) %>%
ggplot(aes(x=mean_gdp, y=mean_lifeExp)) +
geom_point(aes(color=continent))
?geom_point
# 6. gapminder::gapminder 데이터 셋을 이용하여 년도별로 gdp와 기대수명과의 관계를
#산점도를 그리고 대륙별 점의 색상을 달리 시각화
gapminder %>%
group_by(year, continent) %>%
summarise(mean_gdp=mean(gdpPercap), mean_lifeExp  = mean(lifeExp)) %>%
ggplot(aes(x=mean_gdp, y=mean_lifeExp)) +
geom_point(stat='identity')
# 6. gapminder::gapminder 데이터 셋을 이용하여 년도별로 gdp와 기대수명과의 관계를
#산점도를 그리고 대륙별 점의 색상을 달리 시각화
gapminder %>%
group_by(year, continent) %>%
summarise(mean_gdp=mean(gdpPercap), mean_lifeExp  = mean(lifeExp)) %>%
ggplot(aes(x=mean_gdp, y=mean_lifeExp)) +
geom_point(aes(color=continent), stat='identity')
# 6. gapminder::gapminder 데이터 셋을 이용하여 년도별로 gdp와 기대수명과의 관계를
#산점도를 그리고 대륙별 점의 색상을 달리 시각화
gapminder %>%
group_by(year, continent) %>%
summarise(mean_gdp=mean(gdpPercap), mean_lifeExp  = mean(lifeExp)) %>%
ggplot(aes(x=mean_gdp, y=mean_lifeExp)) +
geom_point(aes(color=continent), stat='identity') +
facet_wrap(~year)
# 6. gapminder::gapminder 데이터 셋을 이용하여 년도별로 gdp와 기대수명과의 관계를
#산점도를 그리고 대륙별 점의 색상을 달리 시각화
gapminder %>%
group_by(year, continent) %>%
ggplot(gapminder, aes(x=mean_gdp, y=mean_lifeExp)) +
geom_point(aes(color=continent), stat='identity') +
facet_wrap(~year)
# 6. gapminder::gapminder 데이터 셋을 이용하여 년도별로 gdp와 기대수명과의 관계를
#산점도를 그리고 대륙별 점의 색상을 달리 시각화
gapminder %>%
group_by(year, continent) %>%
summarise(mean_gdp=mean(gdpPercap), mean_lifeExp  = mean(lifeExp)) %>%
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp)) +
geom_point(aes(color=continent), stat='identity') +
facet_wrap(~year)
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp)) +
geom_point(aes(color=continent), stat='identity') +
facet_wrap(~year)
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp)) +
geom_point(aes(color=continent), stat='identity') +
facet_wrap(~year) +
coord_cartesian(xlim=c(0,60000))
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp)) +
geom_point(aes(color=continent), stat='identity') +
facet_wrap(~year) +
coord_cartesian(xlim=c(0,60000))
str(gapminder)
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp)) +
geom_point(aes(color=continent), stat='identity') +
facet_wrap(~year) +
coord_cartesian(xlim=c(0,20000))
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp)) +
geom_point(aes(color=continent), stat='identity') +
facet_wrap(~year) +
coord_cartesian(xlim=c(0,40000))
gapminder %>%
filter(year, continent) %>%
table(gapminder$country)
gapminder %>%
filter(year, continent) %>%
gapminder$country
gapminder %>%
filter(year, continent) %>%
gapminder$continent
gapminder$continent
gapminder$country
gapminder %>%
filter(country == 'Korea, Dem. Rep.' | country == 'Korea, Rep.')
gapminder %>%
filter(country == 'Korea, Dem. Rep.' | country == 'Korea, Rep.') %>%
ggplot(aes(x=year, y=gdpPercap)) +
geom_point(aes(color=country), stat='identity') +
facet_wrap(~year) +
coord_cartesian(xlim=c(0,40000))
gapminder %>%
filter(country == 'Korea, Dem. Rep.' | country == 'Korea, Rep.') %>%
ggplot(aes(x=year, y=gdpPercap)) +
geom_point(aes(color=country), stat='identity')
#교수의 직급별(조교수, 부교수, 정교수) 연봉이 상이한지
# notch=T : 중위수에 대해서 95% 신뢰구간 표현, 신뢰구간이 겹치는지 파악
# position = 'jitter' : 산점도를 분산해서
# geom_rug : 관측값의 밀도 상태 표현
# 데이터가 많은곳은 빽뺵하게, 데이터가 적은 곳은 하얗게게
ggplot(Salaries, aes(x=rank, y=salary)) + geom_boxplot(aes(col=rank), fill='lightyellow', notch=T) +
geom_point(position = 'jitter', col='brown', alpha=0.2, pch=6) +
geom_rug(col='dimgray', sides="l")
gapminder %>%
filter(country == 'Korea, Dem. Rep.' | country == 'Korea, Rep.') %>%
ggplot(aes(x=year, y=gdpPercap)) +
geom_point(aes(color=country), stat='identity')
gapminder %>%
filter(country == 'Korea, Dem. Rep.' | country == 'Korea, Rep.') %>%
ggplot(aes(x=year, y=gdpPercap)) +
geom_point(aes(color=country), stat='identity')
gapminder %>%
filter(country == 'Korea, Dem. Rep.' | country == 'Korea, Rep.') %>%
ggplot(aes(x=year, y=gdpPercap)) +
geom_point(aes(color=country), stat='identity')
gapminder %>%
filter(country == 'Korea, Dem. Rep.' | country == 'Korea, Rep.') %>%
ggplot(aes(x=year, y=gdpPercap)) +
geom_point(aes(color=country), stat='identity') +
scale_color_manual(c('blue','red'))
gapminder %>%
filter(country == 'Korea, Dem. Rep.' | country == 'Korea, Rep.') %>%
ggplot(aes(x=year, y=gdpPercap)) +
geom_point(aes(color=country), stat='identity') +
scale_color_manual(values = c('black','red','orange'))
gapminder %>%
filter(country == 'Korea, Dem. Rep.' | country == 'Korea, Rep.') %>%
ggplot(aes(x=year, y=gdpPercap)) +
geom_point(aes(color=country), stat='identity') +
scale_color_manual(values = c('black','red'), pch=c(3,19))
gapminder %>%
filter(country == 'Korea, Dem. Rep.' | country == 'Korea, Rep.') %>%
ggplot(aes(x=year, y=gdpPercap)) +
geom_point(aes(color=country), stat='identity') +
scale_color_manual(values = c('black','red'), pch=3)
gapminder %>%
filter(country == 'Korea, Dem. Rep.' | country == 'Korea, Rep.') %>%
ggplot(aes(x=year, y=gdpPercap)) +
geom_point(aes(color=country), stat='identity', pch=3) +
scale_color_manual(values = c('black','red'))
?geom_point
gapminder %>%
filter(country == 'Korea, Dem. Rep.' | country == 'Korea, Rep.') %>%
ggplot(aes(x=year, y=gdpPercap, shape=country)) +
geom_point(aes(color=country), stat='identity', pch=3) +
scale_color_manual(values = c('black','red'))
gapminder %>%
filter(country == 'Korea, Dem. Rep.' | country == 'Korea, Rep.') %>%
ggplot(aes(x=year, y=gdpPercap, shape=country)) +
geom_point(aes(color=country), stat='identity') +
scale_color_manual(values = c('black','red'))
?geom_point
gapminder %>%
filter(country == 'Korea, Dem. Rep.' | country == 'Korea, Rep.') %>%
ggplot(aes(x=year, y=gdpPercap, shape=country)) +
geom_point(aes(color=country), stat='identity') +
scale_color_manual(values = c('black','red'))  +
scale_shape_manual(values=c(3, 19))
gapminder %>%
filter(country == 'Korea, Dem. Rep.' | country == 'Korea, Rep.') %>%
ggplot(aes(x=year, y=gdpPercap, shape=country)) +
geom_point(aes(color=country), stat='identity') +
scale_color_manual(values = c('blue','red'))  +
scale_shape_manual(values=c(3, 19))
gapminder %>%
filter(country == 'Korea, Dem. Rep.' | country == 'Korea, Rep.') %>%
ggplot(aes(x=year, y=gdpPercap, shape=country)) +
geom_point(aes(color=country), stat='identity') +
scale_color_manual(values = c('blue','red'))  +
scale_shape_manual(values=c(19, 3))
gapminder %>%
filter(country == 'Korea, Dem. Rep.' | country == 'Korea, Rep.') %>%
ggplot(aes(x=year, y=gdpPercap, shape=country)) +
geom_point(aes(color=country), stat='identity') +
scale_color_manual(values = c('blue','red'))  +
scale_shape_manual(values=c(19, 3)) +
theme(legend.position = c(0.2,0.8))
gapminder %>%
filter(country == 'Korea, Dem. Rep.' | country == 'Korea, Rep.') %>%
ggplot(aes(x=year, y=gdpPercap, shape=country)) +
geom_point(aes(color=country), stat='identity') +
scale_color_manual(values = c('blue','red'))  +
scale_shape_manual(values=c(19, 3)) +
theme(legend.position = c(0.2,0.9))
gapminder %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.') %>%
ggplot(aes(x=year, y=gdpPercap, shape=country)) +
geom_point(aes(color=country), stat='identity') +
scale_color_manual(values = c('red','blue'))  +
scale_shape_manual(values=c(3, 19)) +
theme(legend.position = c(0.2,0.9))
gapminder %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.') %>%
ggplot(aes(x=year, y=gdpPercap, shape=country)) +
geom_point(aes(color=country), stat='identity') +
scale_color_manual(values = c('red','blue'))  +
scale_shape_manual(values=c(3, 19)) +
theme(legend.position = c(0.2,0.9))
gapminder %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.') %>%
arrange(country) %>%
ggplot(aes(x=year, y=gdpPercap, shape=country)) +
geom_point(aes(color=country), stat='identity') +
scale_color_manual(values = c('red','blue'))  +
scale_shape_manual(values=c(3, 19)) +
theme(legend.position = c(0.2,0.9))
gapminder %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.') %>%
arrange(desc(country)) %>%
ggplot(aes(x=year, y=gdpPercap, shape=country)) +
geom_point(aes(color=country), stat='identity') +
scale_color_manual(values = c('red','blue'))  +
scale_shape_manual(values=c(3, 19)) +
theme(legend.position = c(0.2,0.9))
gapminder %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.') %>%
arrange(desc(country))
gapminder %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.') %>%
arrange(desc(country))
gapminder %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.') %>%
arrange(country)
gapminder %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.') %>%
arrange(desc(country)) %>%
ggplot(aes(x=year, y=gdpPercap, shape=country)) +
geom_point(aes(color=country), stat='identity') +
scale_color_manual(values = c('red','blue'))  +
scale_shape_manual(values=c(3, 19)) +
theme(legend.position = c(0.2,0.9))
levels(country)
levels(gapminder$country)
?theme
gapminder %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.') %>%
arrange(desc(country)) %>%
ggplot(aes(x=year, y=gdpPercap, shape=country)) +
geom_point(aes(color=country), stat='identity') +
scale_color_manual(values = c('red','blue'))  +
scale_shape_manual(values=c(3, 19)) +
theme(legend.position = c(0.2,0.9), legend.text.align=0)
gapminder %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.') %>%
arrange(desc(country)) %>%
ggplot(aes(x=year, y=gdpPercap, shape=country)) +
geom_point(aes(color=country), stat='identity') +
scale_color_manual(values = c('red','blue'))  +
scale_shape_manual(values=c(3, 19)) +
theme(legend.position = c(0.2,0.9), legend.text.align=1)
?theme
levels(gapminder$country)
gapminder2 <- gapminder
gapminder2$country <- factor(gapminder2$country, levels = rev(levels(gapminder2$country)))
gapminder2 %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.') %>%
arrange(desc(country)) %>%
ggplot(aes(x=year, y=gdpPercap, shape=country)) +
geom_point(aes(color=country), stat='identity') +
scale_color_manual(values = c('red','blue'))  +
scale_shape_manual(values=c(3, 19)) +
theme(legend.position = c(0.2,0.9))
gapminder %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.' | country == 'Japan' | country == 'China') %>%
arrange(desc(country)) %>%
ggplot(aes(x=year, y=gdpPercap, shape=country)) +
geom_point(aes(color=country), stat='identity') +
scale_color_manual(values = c('red','blue'))  +
scale_shape_manual(values=c(3, 19)) +
theme(legend.position = c(0.2,0.9), legend.text.align=)
gapminder %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.' | country == 'Japan' | country == 'China') %>%
arrange(desc(country)) %>%
ggplot(aes(x=year, y=gdpPercap, shape=country)) +
geom_point(aes(color=country), stat='identity')
gapminder %>%
gapminder %>%
gapminder %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.' | country == 'Japan' | country == 'China') %>%
arrange(desc(country)) %>%
ggplot(aes(x=year, y=gdpPercap)) +
geom_point(aes(color=country), stat='identity')
gapminder %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.' | country == 'Japan' | country == 'China') %>%
arrange(desc(country)) %>%
ggplot(aes(x=year, y=gdpPercap)) +
geom_point(aes(color=country), stat='identity')
gapminder %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.' | country == 'Japan' | country == 'China') %>%
arrange(desc(country)) %>%
ggplot(aes(x=year, y=gdpPercap)) +
geom_point(aes(color=country), stat='identity') +
geom_line()
gapminder %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.' | country == 'Japan' | country == 'China') %>%
arrange(desc(country)) %>%
ggplot(aes(x=year, y=gdpPercap)) +
geom_point(aes(color=country), stat='identity') +
# 배기량에 따른
ggplot(data=mpg, aes(x=displ)) +
geom_histogram(aes(fill=class)) +
theme(axis.text.x = element_text(color='red', size=15),
axis.line = element_line(color='black', size=2),
axis.text.y = element_blank(),
panel.background = element_rect(fill='lightblue')
)
library(ggplot2)
# 배기량에 따른
ggplot(data=mpg, aes(x=displ)) +
geom_histogram(aes(fill=class)) +
theme(axis.text.x = element_text(color='red', size=15),
axis.line = element_line(color='black', size=2),
axis.text.y = element_blank(),
panel.background = element_rect(fill='lightblue')
)
plot(x,y2, pch='1', type="b", col='blue', yaxt='n',, ylim=c(98,108), ylab="", bty="n")
#시간(date)에 따른 실업률(unemploy)
ggplot(data=economics, aes(x=date, y=unemploy)) +
geom_line() + #추세선
geom_smooth(method='lm') # 적합도선
gapminder %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.' | country == 'Japan' | country == 'China') %>%
arrange(desc(country)) %>%
ggplot(aes(x=year, y=gdpPercap)) +
geom_point(aes(color=country), stat='identity') +
geom_line()
gapminder %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.' | country == 'Japan' | country == 'China') %>%
arrange(desc(country)) %>%
ggplot(aes(x=year, y=gdpPercap)) +
geom_point(aes(color=country), stat='identity') +
?geom_point
gapminder %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.' | country == 'Japan' | country == 'China') %>%
arrange(desc(country)) %>%
ggplot(aes(x=year, y=gdpPercap)) +
geom_point(aes(color=country), stat='identity') +
?geom_point
?geom_point
gapminder %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.' | country == 'Japan' | country == 'China') %>%
arrange(desc(country)) %>%
ggplot(aes(x=year, y=gdpPercap)) +
geom_point(aes(color=country), stat='identity')  +
geom_line(aes(color=country), stat='identity')
?geom_line
gapminder %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.' | country == 'Japan' | country == 'China') %>%
arrange(desc(country)) %>%
ggplot(aes(x=year, y=gdpPercap)) +
geom_point(aes(color=country), stat='identity')  +
geom_line(aes(color=country), stat='identity', size=2 )
gapminder %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.' | country == 'Japan' | country == 'China') %>%
arrange(desc(country)) %>%
ggplot(aes(x=year, y=gdpPercap)) +
geom_point(aes(color=country), stat='identity')  +
geom_line(aes(color=country), stat='identity', size=1 )
gapminder %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.' | country == 'Japan' | country == 'China') %>%
arrange(desc(country)) %>%
ggplot(aes(x=year, y=gdpPercap)) +
geom_point(aes(color=country), stat='identity', size=1.1)  +
geom_line(aes(color=country), stat='identity', size=1.1 )
gapminder %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.' | country == 'Japan' | country == 'China') %>%
arrange(desc(country)) %>%
ggplot(aes(x=year, y=gdpPercap)) +
geom_point(aes(color=country), stat='identity', size=1.5)  +
geom_line(aes(color=country), stat='identity', size=1.1 )
gapminder %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.' | country == 'Japan' | country == 'China') %>%
arrange(desc(country)) %>%
ggplot(aes(x=year, y=gdpPercap)) +
geom_point(aes(color=country), stat='identity', size=3)  +
geom_line(aes(color=country), stat='identity', size=1.1 )
# 9. gapminder::gapminder 데이터 셋에서 한중일 4개국별 인구변화 변화를 산점도와 추세선
# 으로 시각화 하시오(scale_y_continuous(labels = scales::comma)추가시 우측처럼)
str(gapminder)
gapminder %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.' | country == 'Japan' | country == 'China') %>%
arrange(desc(country)) %>%
ggplot(aes(x=year, y=pop)) +
geom_point(aes(color=country), stat='identity', size=3)  +
geom_line(aes(color=country), stat='identity', size=1.1 )
gapminder %>%
filter(country == 'Korea, Rep.' | country == 'Korea, Dem. Rep.' | country == 'Japan' | country == 'China') %>%
arrange(desc(country)) %>%
ggplot(aes(x=year, y=pop)) +
geom_point(aes(color=country), stat='identity', size=3)  +
geom_line(aes(color=country), stat='identity', size=1.1 ) +
scale_y_continuous(labels = scales::comma)
# 10.Ggplot2::economic 데이터 셋의 개인 저축률(psavert)가 시간에 따라 어떻게 변해 왔는지
# 알아보려 한다. 시간에 따른 개인 저축률의 변화를 나타낸 시계열 그래프와 추세선을
#시각# 화하시오
str(economics)
ggplot(aes(x=date, y=psavert)) +
geom_line()
# 10.Ggplot2::economic 데이터 셋의 개인 저축률(psavert)가 시간에 따라 어떻게 변해 왔는지
# 알아보려 한다. 시간에 따른 개인 저축률의 변화를 나타낸 시계열 그래프와 추세선을
#시각# 화하시오
str(economics)
ggplot(economics, aes(x=date, y=psavert)) +
geom_line()
ggplot(economics, aes(x=date, y=psavert)) +
geom_line(color='red', size=2)
ggplot(economics, aes(x=date, y=psavert)) +
geom_line(color='red', size=2) +
geom_smooth()
ggplot(economics, aes(x=date, y=psavert)) +
geom_line(color='red', size=2) +
geom_smooth(color='brown')
ggplot(economics, aes(x=date, y=psavert)) +
geom_line(color='red', size=2) +
geom_smooth(color='brown') +
labs(title="그래프 첫 예제")
ggplot(economics, aes(x=date, y=psavert)) +
geom_line(color='red', size=2) +
geom_smooth(color='brown') +
labs(title='밀도도표')
ggplot(economics, aes(x=date, y=psavert)) +
geom_line(color='red', size=2) +
geom_smooth(color='brown') +
labs(title='밀도도표', x="date")
ggplot(economics, aes(x=date, y=psavert)) +
geom_line(color='red', size=2) +
geom_smooth(color='brown') +
labs(title='개인저축률 시계열 그래프', x="date")
ggplot(singer, aes(x=voice.part, y=height)) +
geom_point(position = 'jitter', col='brown', alpha=0.2, pch=6) +
geom_boxplot(notch=T)
ggplot(data=mtcars, aes(x=mpg)) + geom_histogram() +
facet_grid(cyl~.) +
labs(title='cyl에 따른 연비 히스토그램', x='연비', y='횟수')
# 배기량에 따른
ggplot(data=mpg, aes(x=displ)) +
geom_histogram(aes(fill=class)) +
theme(axis.text.x = element_text(color='red', size=15),
axis.line = element_line(color='black', size=2),
axis.text.y = element_blank(),
panel.background = element_rect(fill='lightblue')
)
ggplot(mpg, aes(x=displ)) +
geom_histogram(aes(fill=class) , binwidth = 0.1) +
labs(title='Histogram with Auto Binding', subtitle = "(Engine Displacemetn acrooss Wechicle Classes)")+
theme(legend.position = 'bottom')
#시간(date)에 따른 실업률(unemploy)
ggplot(data=economics, aes(x=date, y=unemploy)) +
geom_line() + #추세선
geom_smooth(method='lm') # 적합도선
#시간(date)에 따른 실업률(unemploy)
ggplot(data=economics, aes(x=date, y=unemploy)) +
geom_line() + #추세선
geom_smooth(method='lm') # 적합도선
#시간(date)에 따른 실업률(unemploy)
ggplot(data=economics, aes(x=date, y=unemploy)) +
geom_line() + #추세선
geom_smooth(method='lm') # 적합도선
ggplot(mpg, aes(x=manufacturer)) +
geom_bar(stat='count')
ggplot(mpg, aes(x=manufacturer, fill=class)) +
geom_bar(stat='count') +
theme(legend.position = 'top',
axis.text.x = element_text(angle=60, vjust=0.5)) +
scale_fill_manual(values=topo.colors(7))
ggplot(economics, aes(x=date, y=psavert)) +
geom_line(color='red', size=2) +
geom_smooth(color='brown') +
labs(title='개인저축률 시계열 그래프', x="date")
?ggplot
?aes
ggplot(economics, aes(x=date)) +
geom_line(aes(y=psavert), color='red', size=2) +
geom_line(aes(y=unemploy/pop), color='gray', size=2) +
geom_smooth(color='brown') +
labs(title='개인저축률 시계열 그래프', x="date")
ggplot(economics, aes(x=date)) +
geom_line(aes(y=psavert), color='red', size=2)
ggplot(economics, aes(x=date)) +
geom_line(aes(y=psavert), color='red', size=2) +
geom_line(aes(y=unemploy/pop), color='gray', size=2)
ggplot(economics, aes(x=date)) +
geom_line(aes(y=psavert), color='red', size=2) +
geom_line(aes(y=unemploy/pop), color='black', size=2)
ggplot(economics, aes(x=date)) +
geom_line(aes(y=psavert), color='red', size=2) +
geom_line(aes(y=unemploy/pop*100), color='black', size=2)
ggplot(economics, aes(x=date)) +
geom_line(aes(y=psavert), color='red', size=2) +
geom_line(aes(y=unemploy), color='black', size=2)
ggplot(economics, aes(x=date)) +
geom_line(aes(y=psavert), color='red', size=2) +
geom_line(aes(y=unemploy), color='black', size=2)+
geom_smooth(color='brown') +
labs(title='개인저축률 시계열 그래프', x="date")
