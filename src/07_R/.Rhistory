select(-id) %>%
exam %>%
mutate(total = math + english + science, avg=round(total/3,2)) %>%
select(-id) %>%
arrange(desc(total))
exam %>%
mutate(total = math + english + science, avg=round(total/3,2)) %>%
select(-id) %>%
arrange(desc(total))
exam %>%
summerise(mean_math = mean(math),
mean_eng  = mean(english))
exam %>%
summarise(mean_math = mean(math),
mean_eng  = mean(english))
sd_math = sd(math, sd_eng=sd(english))
exam %>%
summarise(mean_math = mean(math),mean_eng  = mean(english),
sd_math = sd(math), sd_eng=sd(english))
# 3.6 집단별로 요약하기 groupby + summarise
exam %>%
group_by(class) %>%
summarise(mean_math = mean(math), n=n(), max_eng=maX(english)) %>%
arrange (mean_math)
# 3.6 집단별로 요약하기 groupby + summarise
exam %>%
group_by(class) %>%
summarise(mean_math = mean(math), n=n(), max_eng=max(english)) %>%
arrange (mean_math)
exam
#클래스별 수학, 영어, 과학의 평균을
exam %>%
group_by(class) %>%
summarise(mean_math = mean(math), mean_eng = mean(englist), mean_sci = mean(science))
#클래스별 수학, 영어, 과학의 평균을
exam %>%
group_by(class) %>%
summarise(mean_math = mean(math), mean_eng = mean(englist), mean_sci = mean(science))
#클래스별 수학, 영어, 과학의 평균을
exam %>%
group_by(class) %>%
#클래스별 수학, 영어, 과학의 평균을
exam %>%
group_by(class) %>%
summarise(mean_math = mean(math), mean_eng = mean(english), mean_sci = mean(science))
#클래스별 수학, 영어, 과학의 평균을
exam %>%
group_by(class) %>%
summarise(mean_math = mean(math), mean_eng = mean(english), mean_sci = mean(science))
# mpg 회사별로 suv 자동차의 도시 및 고속도로 통합 연비 평균을 구해 내림차순으로 정렬하고 1~5위까지 출력하기
mpg
# mpg 회사별로 suv 자동차의 도시 및 고속도로 통합 연비 평균을 구해 내림차순으로 정렬하고 1~5위까지 출력하기
mpg %>%
filter(class='suv')
# mpg 회사별로 suv 자동차의 도시 및 고속도로 통합 연비 평균을 구해 내림차순으로 정렬하고 1~5위까지 출력하기
mpg %>%
filter(class =='suv')
# mpg 회사별로 suv 자동차의 도시 및 고속도로 통합 연비 평균을 구해 내림차순으로 정렬하고 1~5위까지 출력하기
mpg %>%
filter(class =='suv')
# mpg 회사별로 suv 자동차의 도시 및 고속도로 통합 연비 평균을 구해 내림차순으로 정렬하고 1~5위까지 출력하기
mpg %>%
group by(manufacturer)
# mpg 회사별로 suv 자동차의 도시 및 고속도로 통합 연비 평균을 구해 내림차순으로 정렬하고 1~5위까지 출력하기
mpg %>%
# mpg 회사별로 suv 자동차의 도시 및 고속도로 통합 연비 평균을 구해 내림차순으로 정렬하고 1~5위까지 출력하기
mpg %>%
# mpg 회사별로 suv 자동차의 도시 및 고속도로 통합 연비 평균을 구해 내림차순으로 정렬하고 1~5위까지 출력하기
mpg %>%
# mpg 회사별로 suv 자동차의 도시 및 고속도로 통합 연비 평균을 구해 내림차순으로 정렬하고 1~5위까지 출력하기
mpg %>%
filter(class =='suv') %>%
# mpg 회사별로 suv 자동차의 도시 및 고속도로 통합 연비 평균을 구해 내림차순으로 정렬하고 1~5위까지 출력하기
mpg %>%
filter(class =='suv')
# mpg 회사별로 suv 자동차의 도시 및 고속도로 통합 연비 평균을 구해 내림차순으로 정렬하고 1~5위까지 출력하기
mpg %>%
filter(class =='suv')
# mpg 회사별로 suv 자동차의 도시 및 고속도로 통합 연비 평균을 구해 내림차순으로 정렬하고 1~5위까지 출력하기
mpg %>%
filter(class =='suv')
summarise(mpstot = round((city+highway)/2)
# mpg 회사별로 suv 자동차의 도시 및 고속도로 통합 연비 평균을 구해 내림차순으로 정렬하고 1~5위까지 출력하기
mpg %>%
filter(class =='suv')
# mpg 회사별로 suv 자동차의 도시 및 고속도로 통합 연비 평균을 구해 내림차순으로 정렬하고 1~5위까지 출력하기
mpg %>%
# mpg 회사별로 suv 자동차의 도시 및 고속도로 통합 연비 평균을 구해 내림차순으로 정렬하고 1~5위까지 출력하기
mpg %>%
filter(class =='suv')  %>%
# mpg 회사별로 suv 자동차의 도시 및 고속도로 통합 연비 평균을 구해 내림차순으로 정렬하고 1~5위까지 출력하기
mpg %>%
filter(class =='suv')  %>%
mpg %>%
filter(class =='suv')
mpg %>%
filter(class =='suv')
mpg %>%
filter(class =='suv')  %>%
group_by(manufacturer)
mpg %>%
mpg %>%
mpg %>%
mpg %>%
filter(class =='suv')  %>%
group_by(manufacturer) %>%
summarise(mpstot = round((city+highway)/2)))
mpg %>%
filter(class =='suv')  %>%
group_by(manufacturer) %>%
summarise(mpstot = round((city+highway)/2))
mpg %>%
filter(class =='suv')  %>%
group_by(manufacturer) %>%
summarise(mpstot = round((city+highway)/2))
mpg %>%
filter(class =='suv')  %>%
group_by(manufacturer) %>%
summarise(mpstot = round((city+highway)/2))
mpg %>%
filter(class =='suv')  %>%
group_by(manufacturer) %>%
mutate(mpstot = city+highway)
mpg %>%
filter(class =='suv')  %>%
group_by(manufacturer) %>%
mutate(mpstot = city+highway)
mpg %>%
filter(class =='suv')  %>%
group_by(manufacturer) %>%
mutate(mpstot = city+highway)
mpg %>%
filter(class =='suv')  %>%
group_by(manufacturer) %>%
mutate(mpstot = city+highway)
mpg %>%
filter(class =='suv')  %>%
group_by(manufacturer) %>%
mutate(mpstot = city+highway)
mpg %>%
filter(class =='suv')  %>%
group_by(manufacturer) %>%
mutate(mpstot = city+highway)
mpg %>%
filter(class =='suv')  %>%
group_by(manufacturer) %>%
mutate(mpstot = city+highway) %>%
summarise(tot_mean = mean(total)) %>%
arrange(-mpstot)       %>%
head(5)
mpg %>%
filter(class =='suv')  %>%
group_by(manufacturer) %>%
mutate(mpstot = city+highway) %>%
summarise(tot_mean = mean(mpstot)) %>%
arrange(-mpstot)       %>%
head(5)
mpg %>%
filter(class =='suv')  %>%
group_by(manufacturer) %>%
mutate(mpstot = city+highway)
mpg %>%
filter(class =='suv')  %>%
group_by(manufacturer) %>%
mutate(mpstot = city+highway) %>%
summarise(tot_mean = mean(mpstot))
mpg %>%
filter(class =='suv')  %>%
group_by(manufacturer) %>%
mutate(mpstot = city+highway) %>%
summarise(tot_mean = mean(mpstot)) %>%
arrange(-mpstot)
mpg %>%
filter(class =='suv')  %>%
group_by(manufacturer) %>%
mutate(mpstot = city+highway) %>%
summarise(tot_mean = mean(mpstot)) %>%
arrange(-tot_mean)       %>%
head(5)
head(mpg)
# mpg 데이터를 이용해 분석 문제를 해결해 보세요.
# •
# Q1. 자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 합니다. displ(배기량)이 4
# 이하인 자동차와 5 이상인 자동차 중 어떤 자동차의 hwy(고속도로 연비)가 평균적으로 더
# 높은지 알아보세요.
mpg %>%
group_by(displ)
# mpg 데이터를 이용해 분석 문제를 해결해 보세요.
# •
# Q1. 자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 합니다. displ(배기량)이 4
# 이하인 자동차와 5 이상인 자동차 중 어떤 자동차의 hwy(고속도로 연비)가 평균적으로 더
# 높은지 알아보세요.
mpg %>%
group_by(displ)
# mpg 데이터를 이용해 분석 문제를 해결해 보세요.
# •
# Q1. 자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 합니다. displ(배기량)이 4
# 이하인 자동차와 5 이상인 자동차 중 어떤 자동차의 hwy(고속도로 연비)가 평균적으로 더
# 높은지 알아보세요.
mpg %>%
filter(displ<=4 | displ>=5)
# mpg 데이터를 이용해 분석 문제를 해결해 보세요.
# •
# Q1. 자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 합니다. displ(배기량)이 4
# 이하인 자동차와 5 이상인 자동차 중 어떤 자동차의 hwy(고속도로 연비)가 평균적으로 더
# 높은지 알아보세요.
mpg %>%
filter(displ<=4)
# mpg 데이터를 이용해 분석 문제를 해결해 보세요.
# •
# Q1. 자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 합니다. displ(배기량)이 4
# 이하인 자동차와 5 이상인 자동차 중 어떤 자동차의 hwy(고속도로 연비)가 평균적으로 더
# 높은지 알아보세요.
mpg %>%
filter(displ<=4) %>%
summarise(mean_highway = mean(highway))
# mean_highway
#1     25.96319
mpg %>%
filter(displ>=5) %>%
summarise(mean_highway = mean(highway))
# •
# Q2. 자동차 제조 회사에 따라 도시 연비가 다른지 알아보려고 합니다. "audi"와 "toyota"
# 중 어느 manufacturer(자동차 제조 회사)의 cty(도시 연비)가 평균적으로 더 높은지
# 알아보세요.
mpg %>%
filter(manufacturer='auid') %>%
summarise(mean_city = mean(city))
# •
# Q2. 자동차 제조 회사에 따라 도시 연비가 다른지 알아보려고 합니다. "audi"와 "toyota"
# 중 어느 manufacturer(자동차 제조 회사)의 cty(도시 연비)가 평균적으로 더 높은지
# 알아보세요.
mpg
mpg %>%
filter(manufacturer='audi') %>%
summarise(mean_city = mean(city))
mpg %>%
filter(manufacturer=audi) %>%
summarise(mean_city = mean(city))
mpg %>%
filter(manufacturer=='audi') %>%
summarise(mean_city = mean(city))
mpg %>%
filter(manufacturer=='toyota') %>%
summarise(mean_city = mean(city))
# Q3. "chevrolet", "ford", "honda" 자동차의 고속도로 연비 평균을 알아보려고 합니다. 이
# 회사들의 자동차를 추출한 뒤 hwy 전체 평균을 구해보세요.
#
mpg %>%
filter(manufacturer %in% c("chevrolet", "ford", "honda"))
# Q3. "chevrolet", "ford", "honda" 자동차의 고속도로 연비 평균을 알아보려고 합니다. 이
# 회사들의 자동차를 추출한 뒤 hwy 전체 평균을 구해보세요.
#
mpg %>%
filter(manufacturer %in% c("chevrolet", "ford", "honda"))
# Q3. "chevrolet", "ford", "honda" 자동차의 고속도로 연비 평균을 알아보려고 합니다. 이
# 회사들의 자동차를 추출한 뒤 hwy 전체 평균을 구해보세요.
#
mpg %>%
filter(manufacturer %in% c("chevrolet", "ford", "honda"))
# Q3. "chevrolet", "ford", "honda" 자동차의 고속도로 연비 평균을 알아보려고 합니다. 이
# 회사들의 자동차를 추출한 뒤 hwy 전체 평균을 구해보세요.
#
mpg %>%
filter(manufacturer %in% c("chevrolet", "ford", "honda"))
# Q3. "chevrolet", "ford", "honda" 자동차의 고속도로 연비 평균을 알아보려고 합니다. 이
# 회사들의 자동차를 추출한 뒤 hwy 전체 평균을 구해보세요.
#
mpg %>%
filter(manufacturer %in% c("chevrolet", "ford", "honda")) %>%
group_by(manufacturer) %>%
summarise(mean_highway = mean(highway))
mpg %>%
select(class, city)
mpg %>%
select(class, city)
mpg %>%
select(class, city) %>%
group_by(class) %>%
summarise(mean_city = mean(city))
mpg %>%
select(class, city) %>%
filter(class %in% c("suv", "compact")) %>%
group_by(class) %>%
summarise(mean_city = mean(city))
mpg %>%
select(class, city) %>%
filter(class %in% c("suv", "compact")) %>%
summarise(mean_city = mean(city))
mpg %>%
select(class, city) %>%
filter(class %in% c("suv", "compact")) %>%
group_by(class) %>%
summarise(mean_city = mean(city))
mpg
mpg %>%
mutate(totmps = city+highway)
mpg2 <- mpg %>%
mutate(totmps = city+highway)
mpg2 <- mpg %>%
mutate(totmps = city+highway, avgmps = round(totmps/2),2)
head(mpg2)
mpg2 <- mpg %>%
mutate(totmps = city+highway, avgmps = round(totmps/2),2))
mpg2 <- mpg %>%
mutate(totmps = city+highway, avgmps = round(totmps/2,2)  )
head(mpg2)
mpg2
mpg2 %>%
arrange(-avgmps)
mpg2 %>%
arrange(-avgmps)
mpg2 %>%
arrange(-avgmps) %>%
head(3)
mpg2 <- mpg %>%
mutate(totmps = city+highway, avgmps = round(totmps/2,2)  )
mpg2
mpg %>%
mutate(totmps = city+highway, avgmps = round(totmps/2,2)  ) %>%
arrange(-avgmps) %>%
head(3)
mpg2 <- mpg %>%
mutate(totmps = city+highway)
mpg2 <- mpg %>%
mutate(totmps = city+highway, avgmps = round(totmps/2,2)  )
head(mpg2)
mpg2 %>%
arrange(-avgmps) %>%
head(3)
mpg %>%
mutate(totmps = city+highway, avgmps = round(totmps/2,2)  ) %>%
arrange(-avgmps) %>%
head(3)
mpg$displ_div <- ifelse(mpg$displ<=4,'low')
mpg$displ_div <- ifelse(mpg$displ<=4,'low','')
mpg$displ_div <- ifelse(mpg$displ>=5,'high','')
head(mpg)
mpg$displ_div <- ifelse(mpg$displ<=4,'low','')
mpg$displ_div2 <- ifelse(mpg$displ>=5,'high','')
head(mpg)
mpg %>%
filter(displ<=4) %>%
group_by(displ_div, displ_div2) %>%
summarise(mean_highway = mean(highway))
mpg %>%
filter(displ<=4) %>%
group_by(displ_div2) %>%
summarise(mean_highway = mean(highway))
mpg %>%
filter(displ<=4) %>%
group_by(displ_div) %>%
summarise(mean_highway = mean(highway))
mpg %>%
group_by(displ_div, displ_div2) %>%
summarise(mean_highway = mean(highway))
mpg %>%
filter(manufacturer %in% c('audi','toyota')) %>%
group_by (manufacturer)
mpg %>%
filter(manufacturer %in% c('audi','toyota')) %>%
group_by (manufacturer) %>%
summarise(mean_city = mean(city))
#혼자2 Q3
head(mpg)
#혼자2 Q3
mpg %>%
filter(manufacturer %in% c("audi")) %>%
group_by(model) %>%
mpg2 <- mpg %>%
mutate(totmps = city+highway)
#혼자2 Q3
mpg %>%
filter(manufacturer=="audi") %>%
group_by(model) %>%
mpg2 <- mpg %>%
mutate(totmps = city+highway)
#혼자2 Q3
mpg %>%
filter(manufacturer=="audi") %>%
group_by(model)
#혼자2 Q3
mpg %>%
filter(manufacturer=="audi") %>%
group_by(model)
#혼자2 Q3
mpg %>%
filter(manufacturer=="audi") %>%
group_by(model) %>%
summarise(mean_highway = mean(highway))
#혼자2 Q3
mpg %>%
filter(manufacturer=="audi") %>%
group_by(model) %>%
summarise(mean_highway = mean(highway))
edit(mpg %>%
filter(manufacturer=="audi") )
#혼자4 1
mpg %>%
select(class, city) %>%
filter(class %in% c("suv", "compact")) %>%
group_by(class) %>%
summarise(mean_city = mean(city))
#혼자4 1
mpg %>%
select(class, city) %>%
filter(class %in% c("suv", "compact")) %>%
group_by(class) %>%
summarise(mean_city = mean(city))
#혼자4 3
mpg %>%
group_by(manufacturer) %>%
summarise(mean_highway = mean(highway))
#혼자4 3
mpg %>%
group_by(manufacturer) %>%
summarise(mean_highway = mean(highway)) %>%
arrange(-mean_city) %>%
head(3)
#혼자4 3
mpg %>%
group_by(manufacturer) %>%
summarise(mean_highway = mean(highway)) %>%
arrange(-mean_highway) %>%
head(3)
#혼자4 4
mpg %>%
select(manufacturer) %>%
filter(class == "compact")
source('E:/gon/TJS_BigData/src/07_R/5-1장.dplyr을 이용한 전처리.R', encoding = 'UTF-8', echo=TRUE)
heaD(mpg)
head(mpg)
#혼자4 4
mpg %>%
filter(class == "compact")
#혼자4 4
mpg %>%
filter(class == "compact") %>%
group by(manufacturer) %>%
summarise(n_count = n(class))
#혼자4 4
mpg %>%
filter(class == "compact") %>%
group by(manufacturer) %>%
summarise(n_count = n(f1))
head(mpg)
#혼자4 4
mpg %>%
filter(class == "compact") %>%
group by(manufacturer) %>%
summarise(n_count = n(cyl))
#혼자4 4
mpg %>%
filter(class == "compact") %>%
group by(manufacturer) %>%
summarise(n_count = sum(cyl))
#혼자4 4
mpg %>%
filter(class == "compact")
#혼자4 4
mpg %>%
filter(class == "compact") %>%
group by(manufacturer)
#혼자4 4
mpg %>%
filter(class == "compact") %>%
group_by(manufacturer) %>%
summarise(n_count = sum(cyl))
#혼자4 4
mpg %>%
filter(class == "compact") %>%
group_by(manufacturer) %>%
summarise(n_count = n(cyl))
#혼자4 4
mpg %>%
filter(class == "compact") %>%
group_by(manufacturer) %>%
summarise(n_count = n(cyl))
#혼자4 4
mpg %>%
filter(class == "compact") %>%
group_by(manufacturer) %>%
summarise(n_count = sum(cyl))
#혼자4 4
mpg %>%
filter(class == "compact") %>%
group_by(manufacturer) %>%
summarise(n_count = n(cyl))
#혼자4 4
mpg %>%
filter(class == "compact") %>%
group_by(manufacturer) %>%
summarise(n_count = n(cyl))
#혼자4 4
mpg %>%
filter(class == "compact") %>%
group_by(manufacturer)
#혼자4 4
mpg$count <- 1
mpg %>%
filter(class == "compact") %>%
group_by(manufacturer) %>%
summarise(n_count = sum(count))
mpg %>%
filter(class == "compact") %>%
group_by(manufacturer) %>%
summarise(n_count = sum(count))
mpg %>%
filter(class == "compact") %>%
group_by(manufacturer) %>%
summarise(n_count = sum(count)) %>%
arrange(-n_count)
