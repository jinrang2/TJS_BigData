# 1. 도움말 기능
iris
edit(iris)
edit(iris)
?iris
help(iris)
# 1.2 검색기능
?? iris
help.search('iris')
help(datasets)
# 1.3 패키지 도움말
library(help=datasets)
# 1.4 함수 도움말
methods(as) # 형변환 함수들들
as.interger(1.25)
?as.interger
?as.integer
as.integer(1.25)
?as.integer
data <- c(10,20,30)
mean(data)
?mean
example(mean)
#1.5 정보조회
edti(iris)
#1.5 정보조회
edit(iris)
attributes(iris)
# 6. 주석과 자동완성
#주석
#자동완성: Tab
R.version
## 2. 패키지
# R내에 기본패키지외의 패키지는 다운받음
# 1. 패키지 설치
# 설치 : install.package("패키지명")
# 설치된 패키지를 메모리에 로드 library("패키지명")
# 패키지 내의 데이터나 함수들 막 사용
detach("package:datasets",unload=TRUE)
## 2. 패키지
# R내에 기본패키지외의 패키지는 다운받음
# 1. 패키지 설치
# 설치 : install.package("패키지명")
# 설치된 패키지를 메모리에 로드 library("패키지명")
# 패키지 내의 데이터나 함수들 막 사용
iris
iris
install.packages('arules')
install.packages("arules")
library(arules        )
library("arules")
arules
?apriori
?apriori
detach("package:datasets",unload=TRUE)
detach("package:datasets",unload=TRUE)
detach("package:arules",unload=TRUE)
iris <- daa(list="iris", package)
iris <- data(list="iris", package)
iris <- data(list="iris", package="datasets")
ls()
#데이터의 경우는 메모리에 패키지 로드없이 사용가능능
iris <- data(list="iris", package="datasets")
# 변수들 다 삭제제
ls()
#데이터의 경우는 메모리에 패키지 로드없이 사용가능
iris <- data(list="iris", package="datasets")
# 변수들 다 삭제제
ls()
#데이터의 경우는 메모리에 패키지 로드없이 사용가능
data(iris, package="datasets")
#데이터의 경우는 메모리에 패키지 로드없이 사용가능
data(iris, package="datasets")
iris
## 3. 변수
#변수:특수문자중 .,_ 사용가능
#할당: <- , <<-
resul <- 0
## 3. 변수
#변수:특수문자중 .,_ 사용가능
#할당: <- , <<-
result <- 0
class(result)
add(10,20)
result <- a+b  # 지역변수
add <- function(a,b){
result <- a+b  # 지역변수
return (result)
}
result <<- a+b  # 지역변수
#result <- a+b  # 지역변수
result <<- a+b #전역변수에 할당당
add(10,20)
result
x<-10
y<-10
(z<-x+y)
ls()
?ls
ls(all.names = TRUE)
result
print(result)
(z <- z+10)
paste('Hello','world')
cat('Hello world!')
paste('result 값은',result)
paste('result 값은',result)
paste('Hello','world',sep=',')
1:3
paste(c(1,2,3), c('하나','둘','셋'))
paste(c(1,2,3), c('하나','둘','셋'), sep='은 ',)
paste(c(1,2,3), c('하나','둘','셋'), sep='은 ')
paste(c(1,2,3), c('하나','둘','셋'), sep='은 ',collapse=' / ')
month.name
month.name
(nth<paste(1:12, c('st','nd','rd',rep('th',9), sep=''))
(nth<paste(1:12, c('st','nd','rd',rep('th',9), sep=''))
(nth<-paste(1:12, c('st','nd','rd',rep('th',9), sep=''))
(nth<-paste(1:12, c('st','nd','rd',rep('th',9), sep=''))
(nth<-paste(1:12, c('st','nd','rd',rep('th',9)), sep=''))
(nth<-paste(1:12, c('st','nd','rd',rep('th',9)), sep=''))
paste(month.name, nth, set='은 ', collapse=" ; ")
paste(month.name, nth, sep='은 ', collapse=" ; ")
month.name
(nth<-paste(1:12, c('st','nd','rd',rep('th',9)), sep=''))
paste(month.name, nth, sep='은 ', collapse=" ; ")
paste(month.name, nth, sep='은 ', collapse=" ; ")
rm(list=ls())   # 히든 변수외 일반 변수 삭제
#전부삭제
rm(list=ls())   # 히든 변수외 일반 변수 삭제
kor <- c('한국','일본','미국')
usa <- c('Korea','Japan','America')
paste(kor, usa, sep='은 ', collapse=" ; ")
paste(kor, usa, sep=':', collapse="")
paste(kor, usa, sep=':', collapse=", ")
paste(kor, usa, sep=':', collapse=" ")
paste(kor, usa, sep=':', collapse='" " ')
paste(kor, usa, sep=':', collapse=' " " ')
paste(kor, usa, sep=':')
usa <- c('Korea','Japan','America', 0)
paste(kor, usa, sep=':', collapse=", ")
paste(kor, usa, sep=':')
usa <- c('Korea','Japan','America')
(str <- paste(kor, usa, sep=':', collapse=", ")   )
str
(strVector <- paste(kor, usa, sep=':'))
strVector
str
#문2. MASS:: Cars93 데이터를 출력해 보세요요
Cars93
library(MASS);
Cars92
Cars93
install.packages("MASS")
install.packages("MASS")
install.packages("MASS")
edit(Cars93)
Cars93
library(MASS);
install.packages("MASS")
Cars93
edit(Cars93)
head(Cars93)
edit(Cars93)
edit(Cars93)
head(Cars93)
install.packages("MASS")
Cars93
a <- "Hello"
a <- "Hello"
cat(a)
cat('a 값은',a)
class(a)
cat(a)
cat(b)
b <- "Hello\nHello"
cat(b)
class(b)
b <- 10
b <- 10.1
b <- 10
class(b)
b <- 10.1
class(b)
b <- "Hello\nHello"
class(b)
b <- 10
class(b)
class(b)
as.character(b)
class(b)
strB <- as.character(b)
class(b)
class(strB)
strB
c<-TRUE;
c
methods(is)
is.logical(c)
