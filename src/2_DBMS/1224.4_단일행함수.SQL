-- 단일행 함수
-- 그룹 함수
SELECT NVL(COMM, 0), TO_CHAR(HIREDATE, 'YYYYMMDD'), HIREDATE, HIREDATE - 1
  FROM EMP;

DESC DUAL;

SELECT ABS(- 9)
  FROM DUAL;

SELECT FLOOR(34.5678)
  FROM DUAL;

SELECT TRUNC(34.5678, 1)
  FROM DUAL
UNION ALL
SELECT TRUNC(34.5678, 0)
  FROM DUAL
UNION ALL
SELECT TRUNC(34.5678, - 1)
  FROM DUAL;

SELECT ROUND(34.5678, 1)
  FROM DUAL;

-- EMP 테이블 이름, 급여 십의 자리 까지만 출력

SELECT ENAME, TRUNC(SAL, - 1)
  FROM EMP;

SELECT ENAME, TRUNC(SAL, - 1), ROUND(SAL, - 1), ROUND(SAL, - 2), ROUND(SAL, - 3)
  FROM EMP;

SELECT A.*, TO_CHAR(HIREDATE, 'MM')
  FROM EMP A
 WHERE MOD(TO_CHAR(HIREDATE, 'MM'), 2) = 1;

SELECT ACOS(- 1)
  FROM DUAL;

SELECT UPPER('abcABC')
  FROM DUAL
UNION ALL
SELECT LOWER('abcABC')
  FROM DUAL
UNION ALL
SELECT INITCAP('abcABC')
  FROM DUAL;

SELECT *
  FROM EMP
 WHERE JOB = UPPER('MANAGER');

SELECT EMPNO, INITCAP(ENAME)
  FROM EMP;

SELECT A.ENAME, B.ENAME, CONCAT(A.ENAME, B.ENAME)
  FROM EMP A, EMP B
 WHERE A.MGR = B.EMPNO;

--- 아무개는 XX다(이름은 JOB이다)

SELECT ENAME
       || '은 '
       || JOB
       || '이다'
  FROM EMP;

SELECT SUBSTR(JOB, 2, 4)
  FROM EMP;

SELECT SUBSTR('WELCOME TO ORACLE', 3, 2)
  FROM DUAL
UNION ALL
SELECT SUBSTRB('WELCOME TO ORACLE', 3, 2)
  FROM DUAL
UNION ALL
SELECT SUBSTR('데이터베이스', 4, 2)
  FROM DUAL
UNION ALL
SELECT SUBSTRB('데이터베이스', 4, 2)
  FROM DUAL;

SELECT HIREDATE, MON, CASE
    WHEN LENGTH(MON) = 1 THEN
        '0' || MON
    ELSE
        TO_CHAR(MON)
END AS STRMON
  FROM (
    SELECT HIREDATE, EXTRACT(MONTH FROM HIREDATE) AS MON
      FROM EMP
);

SELECT LENGTH('데이터베이스')
  FROM DUAL
UNION ALL
SELECT LENGTHB('데이터베이스')
  FROM DUAL;

SELECT INSTR('ABCABC', 'B')
  FROM DUAL;

SELECT INSTR('ABCABC', 'B', 3)
  FROM DUAL;

SELECT *
  FROM EMP
 WHERE INSTR(HIREDATE, '09') = 4;

SELECT *
  FROM EMP
 WHERE INSTR(HIREDATE, '09') = 7;

SELECT LPAD('ORACLE', 20, '*')
  FROM DUAL
UNION ALL
SELECT RPAD('ORACLE', 20, '*')
  FROM DUAL;

SELECT EMPNO, ENAME, RPAD(SUBSTR(ENAME, 1, 1), LENGTH(ENAME), '*') AS NAMEASTEK, RPAD(SUBSTR(HIREDATE, 1, 6), 8, '*') AS HIEDATEASTEK
  FROM EMP;

SELECT EMPNO, ENAME, LPAD(SUBSTR(ENAME, LENGTH(ENAME) - 1, 1), LENGTH(ENAME), '*') AS NAMEASTEK, RPAD(SUBSTR(HIREDATE, 1, 6), 8,
'*') AS HIREDATEASTEK
  FROM EMP;

SELECT ENAME
  FROM EMP
 WHERE ENAME LIKE ( '__R%' );

SELECT ENAME
  FROM EMP
 WHERE SUBSTR(ENAME, 3, 1) = 'R';

SELECT ENAME
  FROM EMP
 WHERE INSTR(ENAME, 'R') = 3;

SELECT TRIM(' ORACLE ')
  FROM DUAL
UNION ALL
SELECT RTRIM(' ORACLE ')
  FROM DUAL
UNION ALL
SELECT LTRIM(' ORACLE ')
  FROM DUAL;

SELECT TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS'), TO_CHAR(SYSDATE - 1, 'YYYY-MM-DD HH24:MI:SS'), TO_CHAR(SYSDATE + 1, 'YYYY-MM-DD HH24:MI:SS'
)
  FROM DUAL;

SELECT SYSDATE + 14
  FROM DUAL;

SELECT A.*, TRUNC((SYSDATE - HIREDATE) / 7)
  FROM EMP A;

SELECT ENAME, HIREDATE, TRUNC(MONTHS_BETWEEN(SYSDATE, HIREDATE))
  FROM EMP;

SELECT ENAME, HIREDATE, ADD_MONTHS(HIREDATE, 6) "헬조선 수습"
  FROM EMP;

SELECT ENAME, HIREDATE, LAST_DAY(HIREDATE)
  FROM EMP;

SELECT ROUND(SYSDATE - 0.5)
  FROM DUAL;

SELECT HIREDATE, ROUND(HIREDATE, 'MONTH') + 15 첫월급날
  FROM EMP; -- 월급날이 16일



-- 이름 입사일 입사일달의 1일

SELECT ENAME, HIREDATE, TRUNC(HIREDATE)
  FROM EMP;

-- 이름 입사일 월급날 (25일)

SELECT ENAME, HIREDATE, ROUND(HIREDATE - 9, 'MONTH') + 24
  FROM EMP;

--형변환
-- TO_CHAR (날짜, 패턴) 날짜를 패턴에 맞게 문자로 형변환 (한글과 같은 특수문자는 쌍따옴표)
-- 1980/12/17 -> YY:80 MM:12 MON:12월(나라별 월표현) DD:(17) D:요일번호 일~토(1~8) DY:(나라별 요일표현)
-- -> HH24(0~23) AM(오전/오후) HH (0~11) MI(분) SS(초)

SELECT ENAME, HIREDATE, TO_CHAR(HIREDATE, 'YYYY-MM-DD D DY HH24:MI:SS') AS YMDHIRE
  FROM EMP;

-- TO_CHAR (숫자, 패턴) 숫자를 패턴에 맞게 문자로 형변환
-- 패턴내 0 : 자릿수. 자릿수가 맞지 않으면 0으로 채움
-- 패턴내 9 : 자릿수. 자릿수가 맞지 않으면 채우지 않음(자바에서는 #)
-- 패턴내 $ : 통화단위 $가 숫자앞에 붙음
-- 패턴내 L : 지역통화단위가 숫자앞에 붙음

SELECT ENAME, TO_CHAR(SAL, 'L999,999')
  FROM EMP;

SELECT ENAME, TO_CHAR(SAL, '$999,999')
  FROM EMP;

SELECT ENAME, TO_CHAR(SAL, '$000,000')
  FROM EMP;


-- TO_DATE (문자, 패턴) '81/01/01' 문자를 패턴에 맞게 날짜형으로 변환
--81년 5월 1일 ~ 83년도 5월 1일  사이에 입사한 직원을 출력해라

SELECT *
  FROM EMP
 WHERE HIREDATE BETWEEN TO_DATE('19810501', 'YYYYMMDD') AND TO_DATE('19830501', 'YYYYMMDD');
--2020년 11월 30일부터 현재까지 날짜수를 출력(시스템의 날짜형 포맷을 모른다

SELECT TRUNC(SYSDATE - TO_DATE('20201130', 'YYYYMMDD'))
  FROM DUAL;

SELECT TRUNC(TO_DATE('20201201', 'YYYYMMDD') - TO_DATE('20201130', 'YYYYMMDD'))
  FROM DUAL;

-- TO_NUMBER(문자, 패턴) 문자를 패턴에 맞게 숫자형으로 변환

SELECT TO_NUMBER('1,000', '9,999')
  FROM DUAL;

SELECT TO_NUMBER('1,000', '9,999') * 1.1
  FROM DUAL;

-- (5) NULL관련함수, NVL(널일 수도 있는 데이터, 널이면 대신할 값)
--사원이름, 직속상사의 이름(직속상사가 없으면 CEO로 출력)

SELECT E1.ENAME, NVL(E2.ENAME, 'CEO')
  FROM EMP E1, EMP E2
 WHERE E1.MGR = E2.EMPNO (+);

--사원이름, 직속상사의 사번 직속상사가 없으면 CEO로 출력

SELECT E1.ENAME, NVL2(E2.ENAME, TO_CHAR(E2.EMPNO), 'CEO')
  FROM EMP E1, EMP E2
 WHERE E1.MGR = E2.EMPNO (+);

SELECT DNAME, SUM(DECODE(JOB, 'CLERK', SAL, 0)) AS SAL1, SUM(DECODE(JOB, 'MANAGER', SAL, 0)) AS SAL2, SUM(DECODE(JOB, 'PRESIDENT'
, SAL, 0)) AS SAL3, SUM(DECODE(JOB, 'ANAALIST', SAL, 0)) AS SAL4, SUM(DECODE(JOB, 'SALESMAN', SAL, 0)) AS SAL5
  FROM EMP A, DEPT B
 WHERE A.DEPTNO = B.DEPTNO
 GROUP BY DNAME;


-- 이름 급여 인상 예정 급여
--JOB에 따라 'ANALIST' 10% MANAGER면 20% 인상 PRESIDENT 30% 인상 SALESMAN 40%인상 CLERK 0%인상

SELECT DNAME, DECODE(JOB, 'CLERK', SAL, 0) AS SAL1, DECODE(JOB, 'MANAGER', SAL, 0) AS SAL2, DECODE(JOB, 'PRESIDENT', SAL, 0) AS SAL3
, DECODE(JOB, 'ANALIST', SAL, 0) AS SAL4, DECODE(JOB, 'SALESMAN', SAL, 0) AS SAL5
  FROM EMP A, DEPT B
 WHERE A.DEPTNO = B.DEPTNO;

SELECT ENAME, JOB, SAL, 
       DECODE(JOB, 'ANALYST', SAL * 1.1, 'MANAGER', SAL * 1.2, 'PRESIDENT', SAL * 1.3, 'SALESMAN', SAL * 1.4, SAL) AS SAL2
  FROM EMP;

SELECT ENAME, JOB, SAL, CASE
    WHEN JOB = 'ANALYST'   THEN SAL * 1.1
    WHEN JOB = 'MANAGER'   THEN SAL * 1.2
    WHEN JOB = 'PRESIDENT' THEN SAL * 1.3
    WHEN JOB = 'SALESMAN'  THEN SAL * 1.4
    ELSE SAL
END AS SAL2
  FROM EMP;
  

-- 그외 EXTRACT, 레벨별 출력
SELECT ENAME, HIREDATE, 
       EXTRACT(YEAR FROM HIREDATE), 
       EXTRACT(MONTH FROM HIREDATE), 
       EXTRACT(DAY FROM HIREDATE)
  FROM EMP;

-- START WITH(최상위 레벨조건), CONNECT BY PRIOR(레벨들 연결조건)
SELECT LPAD(' ', 2 * LEVEL - 3)
       || ENAME, LEVEL, EMPNO, MGR, DEPTNO
  FROM EMP START WITH
    MGR IS NULL
CONNECT BY
    PRIOR EMPNO = MGR;